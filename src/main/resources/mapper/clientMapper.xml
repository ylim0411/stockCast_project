<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Client">

    <resultMap id="clientProductMap" type="map">
        <result property="clientId" column="clientId"/>
        <result property="clientName" column="clientName"/>
        <result property="productId" column="productId"/>
        <result property="productName" column="productName"/>
        <result property="price" column="price"/>
    </resultMap>

    <!-- 모든 거래처 조회 -->
<!--    <select id="selectAllClients" resultType="map">-->
<!--        SELECT clientId, clientName-->
<!--        FROM client-->
<!--        ORDER BY clientName-->
<!--    </select>-->

    <!--  해당 storeId의 모든 거래처 목록 조회 young -->
    <select id="selectByStoreId" parameterType="int" resultType="com.spring.stockCast.dto.ClientDTO">
        SELECT clientId, clientName, storeId
        FROM client
        WHERE storeId = #{_parameter}
        ORDER BY clientName
    </select>

    <!-- 해당 clientId가 존재하는지 여부 조회 young -->
    <select id="countByStoreIdAndClientId" parameterType="map" resultType="int">
        SELECT COUNT(1)
        FROM client
        WHERE storeId = #{storeId}
        AND clientId = #{clientId}
    </select>

    <!-- 발주번호에 맞는 거래처 조회 ho -->
    <select id="findBySaleId" parameterType="int" resultType="Client">
        SELECT * FROM client
        WHERE clientId = (SELECT clientId FROM orderStmt WHERE orderId = #{id})
    </select>

    <select id="selectByAdminId" parameterType="int" resultType="Client">
        SELECT * FROM client
        WHERE adminId = #{adminId}
    </select>

    <update id="update" parameterType="Client">
        UPDATE client
        SET
        clientName = #{clientName},
        businessNumber = #{businessNumber},
        ceoName = #{ceoName},
        address = #{address},
        contact = #{contact},
        fax = #{fax},
        email = #{email},
        managerName = #{managerName},
        managerContact = #{managerContact},
        managerEmail = #{managerEmail},
        status = #{status},
        updatedAt = #{updatedAt},
        deletedAt = #{deletedAt}
        WHERE clientId = #{clientId}
    </update>

    <select id="selectByClientId" parameterType="int" resultType="Client">
        SELECT * FROM client
        WHERE clientId = #{clientId}
    </select>

    <insert id="insert" parameterType="Client">
        INSERT INTO client (
        adminId,
        storeId,
        clientName,
        businessNumber,
        ceoName,
        address,
        contact,
        fax,
        email,
        managerName,
        managerContact,
        managerEmail,
        status,
        createdAt,
        updatedAt,
        deletedAt
        ) VALUES (
        #{adminId},
        #{storeId},
        #{clientName},
        #{businessNumber},
        #{ceoName},
        #{address},
        #{contact},
        #{fax},
        #{email},
        #{managerName},
        #{managerContact},
        #{managerEmail},
        #{status},
        #{createdAt},
        #{updatedAt},
        #{deletedAt}
        )
    </insert>

    <update id="updateProductAndClient" parameterType="map">
        UPDATE client_product SET clientId = #{clientId} WHERE productId = #{productId}
    </update>

    <insert id="addProductWithClient" parameterType="map">
        INSERT IGNORE INTO client_product (clientId, productId)
        SELECT #{clientId}, p.productId
        FROM product p
        WHERE p.productName = #{productName}
        ORDER BY p.productId
        LIMIT 1
    </insert>


    <select id="selectPagingByAdminId" parameterType="map" resultType="Client">
        SELECT * FROM client
        WHERE adminId = #{adminId}
        ORDER BY clientId ASC
        LIMIT #{start}, #{limit}
    </select>

    <select id="countByAdminId" parameterType="int" resultType="int">
        SELECT COUNT(*) FROM client
        WHERE adminId = #{adminId}
    </select>

    <select id="searchClientsWithPaging" parameterType="map" resultType="Client">
        SELECT * FROM client
        WHERE storeId = #{storeId}
        AND (
        clientName LIKE CONCAT('%', #{keyword}, '%')
        OR ceoName LIKE CONCAT('%', #{keyword}, '%')
        OR businessNumber LIKE CONCAT('%', #{keyword}, '%')
        )
        ORDER BY clientId ASC
        LIMIT #{start}, #{limit}
    </select>

    <select id="countClientsByKeyword" parameterType="map" resultType="int">
        SELECT COUNT(*) FROM client
        WHERE storeId = #{storeId}
        AND (
        clientName LIKE CONCAT('%', #{keyword}, '%')
        OR ceoName LIKE CONCAT('%', #{keyword}, '%')
        OR businessNumber LIKE CONCAT('%', #{keyword}, '%')
        )
    </select>


</mapper>