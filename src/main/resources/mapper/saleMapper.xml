<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Sale">
    <!-- 날짜 범위안에 있는 판매 목록 표시 ho -->
    <select id="findByDateBetween" resultType="Sale">
        SELECT s.*, sp.salePrice, sp.saleQty, pc.categoryName FROM sale s
        JOIN sale_product sp ON s.saleId = sp.saleId
        JOIN product p ON p.productId = sp.productId
        JOIN productcategory pc ON pc.categoryId = p.categoryId
        WHERE s.saleDate BETWEEN #{startDate} AND #{endDate};
    </select>
    <!-- 선택한 년도에 해당하는 판매목록 표시 ho -->
    <select id="findByYear" parameterType="String" resultType="Sale">
        SELECT s.*, sp.salePrice, sp.saleQty, pc.categoryName FROM sale s
        JOIN sale_product sp ON s.saleId = sp.saleId
        JOIN product p ON p.productId = sp.productId
        JOIN productcategory pc ON pc.categoryId = p.categoryId
        WHERE SUBSTR(s.saleDate,1,4) = #{year}
        ORDER BY s.saleDate;
    </select>
    <!-- 판매기록이 있는 년도만 조회 ho -->
    <select id="findSaleYear" resultType="String">
        SELECT DISTINCT(SUBSTR(saleDate,1,4)) FROM sale
    </select>
    <!-- saleId 제일큰수 찾기, 주문번호 출력용 ho -->
    <select id="findMaxSaleId" resultType="int">
        SELECT MAX(saleId) saleId FROM sale
    </select>
    <!-- sale 항목 db에 추가 ho -->
    <insert id="saleCreateStmt" parameterType="map">
        INSERT INTO sale(saleId,storeId,saleDate)
        VALUES (#{saleId},#{storeId},#{today})
    </insert>
    <!-- 위에서 등록한 sale 항목에 구매상품 등록 ho -->
    <insert id="saleSave" parameterType="map">
        INSERT INTO sale_product(saleId,productId,salePrice,saleQty)
        VALUES (#{saleId},#{productId},(SELECT price FROM product WHERE productId = #{productId}),#{qty})
    </insert>
    <!-- 상품이름으로 상품아이디 찾기 ho -->
    <select id="findProductId" parameterType="String" resultType="int">
        SELECT productId FROM product
        WHERE productName = #{pName}
    </select>
    <!-- 회계에서 판매시 연동 accounting 추가 ho -->
    <insert id="insertOrder" parameterType="map">
        INSERT INTO accounting(saleId, transactionDate)
        VALUES(#{saleId},#{today});
    </insert>
    <!-- 위 내용 이후 발주시 차변입력 연동 ho -->
    <insert id="insertAccountOrderDebit" parameterType="map">
        INSERT INTO account_transaction(accountingId,itemId,value,direction)
        VALUES((SELECT accountingId FROM accounting
        WHERE saleId = #{saleId} AND isEntry = 0),(SELECT itemId FROM account_item
        WHERE name = '외상매출금'),(SELECT price FROM product WHERE productId = #{productId})*#{qty},'차변');
    </insert>
    <!-- 위 내용 이후 발주시 대변입력 연동 ho -->
    <insert id="insertAccountOrderCredit" parameterType="map">
        INSERT INTO account_transaction(accountingId,itemId,value,direction)
        VALUES((SELECT accountingId FROM accounting
        WHERE saleId = #{saleId} AND isEntry = 0),(SELECT itemId FROM account_item
        WHERE name = '상품매출'),(SELECT price FROM product WHERE productId = #{productId})*#{qty},'대변');
    </insert>
    <!-- 회계 기입 후 구분하는 불리안 true처리 ho -->
    <update id="updateEntry" parameterType="map">
        UPDATE accounting SET isEntry = 1
        WHERE saleId = #{saleId} AND isEntry = 0;
    </update>
    <!-- 상품재고 확인 -->
    <select id="findProductStock" parameterType="map" resultType="int">
        SELECT stockQuantity FROM product
        WHERE productName = #{productName}  AND storeId =#{storeId};
    </select>
    <!-- 판매점포 이름 가져오기 -->
    <select id="findStoreName" parameterType="String" resultType="String">
        SELECT storeName FROM store
        WHERE storeId = #{storeId}
    </select>
    <!-- 판매율 상위 5개 품목 가져오기 -->
    <select id="findTop5" resultType="String">
        SELECT p.productName FROM sale_product sp
        JOIN product p ON p.productId = sp.productId
        GROUP BY p.productId
        ORDER BY SUM(sp.saleQty) DESC
        LIMIT 5;
    </select>
    <!-- 이번달에 판매한 목록조회 -->
    <select id="findByMonth" parameterType="String" resultType="Sale">
        SELECT s.saleDate, sp.salePrice, sp.saleQty FROM sale s
        JOIN sale_product sp ON sp.saleId = s.saleId
        WHERE SUBSTR(s.saleDate,6,2) = #{currentMonth}
    </select>
</mapper>