<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ProductCategory">

    <insert id="save" parameterType="ProductCategory">
        INSERT INTO productCategory (storeId, categoryName, parentId, categoryLevel)
        VALUES (#{storeId}, #{categoryName}, #{parentId}, #{categoryLevel});
    </insert>

    <select id="findTopLevelCategories" parameterType="int" resultType="ProductCategory">
        SELECT * FROM productcategory WHERE storeId = #{storeId} AND categoryLevel = 1;
    </select>

    <select id="findMiddleLevelCategoriesByParentId" parameterType="map" resultType="ProductCategory">
        SELECT * FROM productcategory WHERE parentId = #{parentId} AND storeId = #{storeId} AND categoryLevel = 2;
    </select>

    <select id="categorySelect" resultType="ProductCategory">
        SELECT * FROM productCategory;
    </select>

    <!-- 모달창 카테고리명 수정 -->
    <update id="updateCategoryNameByLevel" parameterType="map">
        UPDATE productCategory
        SET categoryName = #{newName}
        WHERE categoryId = #{categoryId} AND categoryLevel = #{level};
    </update>


    <!-- 카테고리 분류 항목 출력  -->
    <select id="list" parameterType="int" resultType="StockQuantity">
        SELECT * FROM product_summary_view WHERE storeId = #{storeId};
    </select>

    <!-- 발주 대분류 (거래처별) young -->
    <select id="findTopCategoriesByClientId" parameterType="int" resultType="ProductCategory">
        SELECT DISTINCT pc.*
        FROM client_product cp
        JOIN product p ON cp.productId = p.productId
        JOIN productCategory pc ON p.categoryId = pc.categoryId
        WHERE cp.clientId = #{clientId}
        AND pc.categoryLevel = 1

        UNION

        SELECT DISTINCT top.*
        FROM client_product cp
        JOIN product p ON cp.productId = p.productId
        JOIN productCategory sub ON p.categoryId = sub.categoryId
        JOIN productCategory top ON sub.parentId = top.categoryId
        WHERE cp.clientId = #{clientId}
        AND top.categoryLevel = 1
    </select>

    <!-- 발주 중분류 (대분류 + 거래처별) young -->
    <select id="findSubCategoriesByParentIdAndClientId" parameterType="map" resultType="ProductCategory">
        SELECT DISTINCT sub.*
        FROM productCategory sub
        JOIN product p ON p.categoryId = sub.categoryId
        JOIN client_product cp ON cp.productId = p.productId
        WHERE cp.clientId = #{clientId}
        AND sub.parentId = #{parentId}

        UNION

        SELECT DISTINCT sub.*
        FROM productCategory sub
        WHERE sub.parentId = #{parentId}
    </select>

    <!-- 카테고리 + 하위카테고리 + 상품리스트를 한 번에 구성하는 ResultMap -->
    <resultMap id="CategoryWithProductsMap" type="com.spring.stockCast.dto.ProductCategoryDTO">
        <id     property="categoryId"    column="categoryId"/>
        <result property="storeId"       column="storeId"/>
        <result property="categoryName"  column="categoryName"/>
        <result property="parentId"      column="parentId"/>
        <result property="categoryLevel" column="categoryLevel"/>

        <!-- 하위 카테고리 -->
        <collection property="categoryList"
                    ofType="com.spring.stockCast.dto.ProductCategoryDTO"
                    select="pc_findChildren" column="categoryId"/>

        <!-- 이 카테고리의 상품 목록 -->
        <collection property="productList"
                    ofType="com.spring.stockCast.dto.ProductDTO"
                    select="pc_findProductsWithClient" column="categoryId"/>
    </resultMap>

    <!-- 루트(대분류) 카테고리: productName 필터는 선택사항 -->
    <select id="pc_findTopByStore" parameterType="map" resultMap="CategoryWithProductsMap">
        SELECT categoryId, storeId, categoryName, parentId, categoryLevel
        FROM erp_db.productCategory
        WHERE storeId = #{storeId}
        AND categoryLevel = 1
        ORDER BY categoryName
    </select>

    <!-- 자식 카테고리(중분류) -->
    <select id="pc_findChildren" parameterType="int" resultMap="CategoryWithProductsMap">
        SELECT categoryId, storeId, categoryName, parentId, categoryLevel
        FROM erp_db.productCategory
        WHERE parentId = #{categoryId}
        ORDER BY categoryName
    </select>

    <!-- ★핵심: 해당 카테고리의 상품 + clientId 동시 조회 -->
    <select id="pc_findProductsWithClient" parameterType="int"
            resultType="com.spring.stockCast.dto.ProductDTO">
        SELECT
        p.productId,
        p.storeId,
        p.productName,
        p.categoryId,
        p.price,
        p.stockQuantity,
        p.description,
        p.createdAt,
        cp.clientId       AS clientId   -- ★ clientId 채워줌
        FROM erp_db.product p
        LEFT JOIN erp_db.client_product cp
        ON cp.productId = p.productId    -- ★ 다:다 매핑 중 한 건이 잡혀도 clientId가 채워짐
        WHERE p.categoryId = #{categoryId}
        ORDER BY p.productName
    </select>

</mapper>