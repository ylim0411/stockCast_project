<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ProductCategory">

    <insert id="save" parameterType="ProductCategory">
        INSERT INTO productCategory (categoryName, parentId, categoryLevel)
        VALUES (#{categoryName}, #{parentId}, #{categoryLevel});
    </insert>

    <select id="findTopLevelCategories" parameterType="int" resultType="ProductCategory">
        SELECT DISTINCT
        pc.categoryId,
        pc.categoryName,
        pc.parentId,
        pc.categoryLevel,
        pc.createdAt
        FROM erp_db.product_summary_view v
        JOIN erp_db.productcategory pc
        ON pc.categoryId = v.topLevelCategoryId
        WHERE v.storeId = #{storeId}
        ORDER BY pc.categoryName;
    </select>

    <select id="findMiddleLevelCategoriesByParentId" parameterType="map" resultType="ProductCategory">
        SELECT DISTINCT
        v.categoryId     AS categoryId,
        v.categoryName   AS categoryName,
        v.parentId       AS parentId,
        v.categoryLevel  AS categoryLevel,
        v.categoryCreatedAt AS createdAt
        FROM erp_db.product_summary_view v
        WHERE v.storeId = #{storeId}
        AND v.categoryLevel = 2
        AND v.parentId = #{parentId}
        ORDER BY v.categoryName
    </select>

    <select id="categorySelect" resultType="ProductCategory">
        SELECT * FROM productCategory;
    </select>

    <!-- 모달창 카테고리명 수정 -->
    <update id="updateCategoryNameByLevel" parameterType="map">
        UPDATE productCategory
        SET categoryName = #{newName}
        WHERE categoryId = #{categoryId} AND categoryLevel = #{level};
    </update>


    <!-- 카테고리 분류 항목 출력  -->
    <select id="list" parameterType="int" resultType="StockQuantity">
        SELECT * FROM product_summary_view WHERE storeId = #{storeId};
    </select>

    <!-- 발주 대분류 (거래처별) young -->
    <select id="findTopCategoriesByClientId" parameterType="int" resultType="ProductCategory">
        SELECT DISTINCT pc.*
        FROM client_product cp
        JOIN product p ON cp.productId = p.productId
        JOIN productCategory pc ON p.categoryId = pc.categoryId
        WHERE cp.clientId = #{clientId}
        AND pc.categoryLevel = 1

        UNION

        SELECT DISTINCT top.*
        FROM client_product cp
        JOIN product p ON cp.productId = p.productId
        JOIN productCategory sub ON p.categoryId = sub.categoryId
        JOIN productCategory top ON sub.parentId = top.categoryId
        WHERE cp.clientId = #{clientId}
        AND top.categoryLevel = 1
    </select>

    <!-- 발주 중분류 (대분류 + 거래처별) young -->
    <select id="findSubCategoriesByParentIdAndClientId" parameterType="map" resultType="ProductCategory">
        -- 1) 상품이 중분류에 직접 연결된 경우
        SELECT DISTINCT sub.*
        FROM productCategory sub
        JOIN product p ON p.categoryId = sub.categoryId
        JOIN client_product cp ON cp.productId = p.productId
        WHERE cp.clientId = #{clientId}
        AND sub.parentId = #{parentId}

        UNION

        -- 2) 상품이 대분류에 연결되었지만, 그 대분류의 하위 중분류 가져오기
        SELECT DISTINCT sub.*
        FROM productCategory sub
        WHERE sub.parentId = #{parentId}
    </select>

</mapper>